name: Publish to npm

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.0.3)'
        required: true
        type: string

jobs:
  publish:
    name: Publish Packages
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Update version in package.json files
        run: |
          cd packages/core
          npm version ${{ inputs.version }} --no-git-tag-version
          cd ../react
          npm version ${{ inputs.version }} --no-git-tag-version
          # Update dependency version in react package
          sed -i 's/"@imaimai17468\/digital-agency-icons-core": ".*"/"@imaimai17468\/digital-agency-icons-core": "^${{ inputs.version }}"/' package.json

      - name: Publish @imaimai17468/digital-agency-icons-core
        run: |
          cd packages/core
          npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish @imaimai17468/digital-agency-icons-react
        run: |
          cd packages/react
          npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Commit version changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add packages/*/package.json pnpm-lock.yaml
          git commit -m "chore: release v${{ inputs.version }}"
          git tag -a "v${{ inputs.version }}" -m "Release v${{ inputs.version }}"
          git push origin main --tags

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ inputs.version }}
          release_name: Release v${{ inputs.version }}
          body: |
            ## Changes in v${{ inputs.version }}

            Published packages:
            - @imaimai17468/digital-agency-icons-core@${{ inputs.version }}
            - @imaimai17468/digital-agency-icons-react@${{ inputs.version }}
          draft: false
          prerelease: false
